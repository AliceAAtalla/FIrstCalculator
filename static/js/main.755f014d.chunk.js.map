{"version":3,"sources":["components/Button.js","components/Display.js","main/Calculator.js","App.js","index.js"],"names":["Button","operation","double","triple","click","label","react_default","a","createElement","onClick","className","concat","Display","value","initialState","displayValue","clearDisplay","operator","values","currentIndex","Calculator","_useState","useState","Object","objectSpread2","_useState2","slicedToArray","stateValues","setStateValues","setOperation","prevState","equal","currentOp","console","log","addDigit","digit","includes","index","newValue","parseFloat","components_Display","components_Button","map","App","main_Calculator","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.755f014d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Button.css';\n\nconst Button = ({ operation, double, triple, click, label }) => (\n  <button\n    onClick={() => click(label)}\n    className={`\n      button \n      ${operation ? 'operation' : ''}\n      ${double ? 'double' : ''}\n      ${triple ? 'triple' : ''}\n    `}\n  >\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport './Display.css';\n\nconst Display = ({ value }) => <div className=\"display\">{value}</div>;\n\nexport default Display;\n","import React, { useState } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\n\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operator: null,\n  values: [0, 0],\n  currentIndex: 0,\n};\n\nconst Calculator = () => {\n  const [stateValues, setStateValues] = useState({ ...initialState });\n\n  const clearMemory = () => {\n    setStateValues({ ...initialState });\n  };\n\n  const setOperation = (operator) => {\n    if (stateValues.currentIndex === 0) {\n      setStateValues((prevState) => ({\n        ...prevState, operator, currentIndex: 1, clearDisplay: true,\n      }));\n    } else {\n      const equal = operator === '=';\n      const currentOp = stateValues.operator;\n      const values = [...stateValues.values];\n\n      switch (currentOp) {\n        case '+':\n          values[0] += values[1];\n          break;\n        case '-':\n          values[0] -= values[1];\n          break;\n        case '*':\n          values[0] *= values[1];\n          break;\n        case '/':\n          values[0] /= values[1];\n          break;\n        default:\n          console.log('default');\n          break;\n      }\n      values[1] = 0;\n\n      console.log('ola');\n      setStateValues({\n        displayValue: values[0],\n        operator: equal ? null : operator,\n        currentIndex: equal ? 0 : 1,\n        clearDisplay: !equal,\n        values,\n      });\n    }\n  };\n\n  const addDigit = (digit) => {\n    if (digit === '.' && stateValues.displayValue.includes('.')) return null;\n\n    const clearDisplay = stateValues.displayValue === '0' || stateValues.clearDisplay;\n    const currentValue = clearDisplay ? '' : stateValues.displayValue;\n    const displayValue = currentValue + digit;\n\n    if (digit !== '.') {\n      const index = stateValues.currentIndex;\n      const newValue = parseFloat(displayValue);\n      const values = [...stateValues.values];\n      values[index] = newValue;\n      setStateValues((prevState) => ({ ...prevState, values }));\n    }\n\n    setStateValues((prevState) => ({ ...prevState, displayValue, clearDisplay: false }));\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display value={stateValues.displayValue} />\n      <Button label=\"AC\" click={clearMemory} triple />\n      <Button label=\"/\" click={setOperation} operation />\n      {['7', '8', '9'].map((label) => (\n        <Button label={label} click={addDigit} />\n      ))}\n      <Button label=\"*\" click={setOperation} operation />\n      {['4', '5', '6'].map((label) => (\n        <Button label={label} click={addDigit} />\n      ))}\n      <Button label=\"-\" click={setOperation} operation />\n      {['1', '2', '3'].map((label) => (\n        <Button label={label} click={addDigit} />\n      ))}\n      <Button label=\"+\" click={setOperation} operation />\n      <Button label=\"0\" click={addDigit} double />\n      <Button label=\".\" click={addDigit} />\n      <Button label=\"=\" click={setOperation} operation />\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport Calculator from './main/Calculator';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Calculator</h1>\n      <Calculator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles.css';\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}